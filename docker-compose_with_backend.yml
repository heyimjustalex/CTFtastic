version: "3.8"
services:
  proxy:
    container_name: nginxCTF
    build:
      context: ./reverse_proxy
      dockerfile: Dockerfile
    ports:
      - 80:80
    networks:
      - mynetwork
    restart: on-failure
  frontend:
    container_name: frontendCTF
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/src:/app/src:ro
      - /app/node_modules
    ports:
      - 81:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_BACKEND_ADDRESS=http://localhost:80/api
      - WDS_SOCKET_PORT=0
      - WDS_SOCKET_HOST=0.0.0.0
    networks:
      - mynetwork

  backend:
    container_name: backendCTF
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldbCTF:3306/db?enabledTLSProtocols=TLSv1.2
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    networks:
      - mynetwork

  phpmyadmin:
    container_name: phpmyadminCTF
    image: phpmyadmin
    restart: always
    ports:
      - 8081:80
    environment:
      - PMA_ARBITRARY=1
    networks:
      - mynetwork

  db:
    image: mysql:5.7
    container_name: mysqldbCTF
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    volumes:
      - CTFtasticDB:/var/lib/mysql
      - ./setup.sql:/docker-entrypoint-initdb.d/setup.sql  
    networks:
      - mynetwork
    healthcheck:
        test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
       # test: ["CMD-SHELL", 'mysqladmin ping']
       # test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-ppassword"]
        interval: 2s
        timeout: 20s
        retries: 10


volumes:
  CTFtasticDB:
networks:
  mynetwork:
