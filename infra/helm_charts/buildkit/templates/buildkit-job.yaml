apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "ctftastic.fullname" . }}
  labels:
    {{- include "ctftastic.labels" . | nindent 4 }}
spec:
  template:
    spec:
      restartPolicy: Never
      initContainers:
        - name: prepare
          image: alpine:3.10
          command:
            - sh
            - -c
            - 'echo -e "{{.Values.dockerfile}}" > /workspace/Dockerfile'
          volumeMounts:
            - name: workspace
              mountPath: /workspace
      containers:
        - name: buildkit
          image: moby/buildkit:master
          command:
          #  - sh
          #  - -c
          #  - "sleep 3600"
            - buildctl-daemonless.sh
          args:
            - build
            - --frontend
            - dockerfile.v0
            - --local
            - context=/workspace
            - --local
            - dockerfile=/workspace
          # To push the image to a registry, add
            - --output 
            - type=image,name=docker-registry-svc:5001/{{.Values.outputImage}}:latest,push=true,registry.insecure={{.Values.insecureRegistry}}
          securityContext:
            privileged: true
          volumeMounts:
            - name: workspace
              readOnly: true
              mountPath: /workspace
            - name: registry-vol
              readOnly: true
              mountPath: /certs
      # To push the image, you also need to create `~/.docker/config.json` secret
      # and set $DOCKER_CONFIG to `/path/to/.docker` directory.
      volumes:
        - name: workspace
          hostPath:
              path: {{ .Values.workspaceHostPath }}
              type: Directory
        - name: registry-vol
          hostPath:
              path: {{.Values.certsHostPath}}
              type: Directory
  backoffLimit: 2